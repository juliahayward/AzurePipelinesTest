# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
# Check out this repository.
- checkout: self
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
- task: Bash@3
  inputs:
    targettype: 'inline'
    script: 'ls -R ''$(Build.SourcesDirectory)'''
  displayName: 'DEBUG: List out the files in the repo'
- task: Bash@3
  inputs:
    targettype: 'inline'
    script: docker run -v $(Build.SourcesDirectory)/migrations:/sql flyway/flyway -url="jdbc:sqlserver://52.17.96.229:1433;databaseName=azure-demo-test" -user=azureDemo -password=$(DbPwd) -locations=filesystem:/sql clean migrate
  displayName: 'Run flyway clean-migrate on TEST'
- task: Bash@3
  inputs:
    targettype: 'inline'
    script: docker run -v $(Build.SourcesDirectory)/migrations:/sql flyway/flyway -url="jdbc:sqlserver://52.17.96.229:1433;databaseName=azure-demo-test" -user=azureDemo -password=$(DbPwd) -locations=filesystem:/sql info
  displayName: 'Run flyway info on TEST'
- task: Bash@3
  inputs:
    targettype: 'inline'
    script: docker run -v $(Build.SourcesDirectory)/migrations:/sql flyway/flyway -url="jdbc:sqlserver://52.17.96.229:1433;databaseName=azure-demo-prod" -user=azureDemo -password=$(DbPwd) -locations=filesystem:/sql migrate
  displayName: 'Run flyway migrate on PROD'




